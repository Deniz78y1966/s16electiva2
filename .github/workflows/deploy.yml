name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  ci-cd:
    runs-on: ubuntu-latest

    steps:
      # 1) Obtener el código
      - name: Checkout code
        uses: actions/checkout@v4

      # 2) Instalar .NET
      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # 3) Restaurar dependencias
      - name: Restore dependencies
        run: dotnet restore s16electiva2

      # 4) Compilar la aplicación
      - name: Build app
        run: dotnet build /Users/genesisdenissematosrosario/GitProjects/s16electiva2/HolaMundoApp/HolaMundoApp.csproj --configuration Release --no-restore

      # 5) Ejecutar tests NUnit
      - name: Run tests
        run: dotnet test /Users/genesisdenissematosrosario/GitProjects/s16electiva2/HolaMundoTests/HolaMundoTests.csproj --configuration Release --no-build --verbosity normal

      # 6) Variables para etiquetas Docker
      - name: Set up variables
        run: |
          echo "SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      # 7) Login a Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 8) Construir imagen Docker
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/holamundoapp:latest \
                       -t ${{ secrets.DOCKER_USERNAME }}/holamundoapp:${{ env.SHA_SHORT }} \
                       -t ${{ secrets.DOCKER_USERNAME }}/holamundoapp:${{ env.DATE }} .

      # 9) Subir imagen a Docker Hub
      - name: Push Docker images
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/holamundoapp:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/holamundoapp:${{ env.SHA_SHORT }}
          docker push ${{ secrets.DOCKER_USERNAME }}/holamundoapp:${{ env.DATE }}

      # 10) Trigger Render deploy
      - name: Trigger Render deploy
        run: |
          curl -X POST https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          -H "Content-Type: application/json"

